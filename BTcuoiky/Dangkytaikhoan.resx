<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>